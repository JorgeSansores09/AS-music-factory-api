<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<sub-flow name="impl-get-artists" doc:id="8b8d577b-9689-4948-a7ce-c5b47c7d05b2">
		<logger level="INFO" doc:name="INFO START" doc:id="e9deabb5-cdfe-4913-ae2e-ad018380522d" message="impl-get-artists::START" />
		<flow-ref doc:name="sr-build-query-param-list" doc:id="58c78aa8-a747-445e-8121-a7a457d51828" name="sr-build-query-param-list" target="queryParamList"/>
		<flow-ref doc:name="sr-select-artists" doc:id="62670ad4-b070-4415-9d94-92ea1e785c2a" name="sr-select-artists" />
	
</sub-flow>
	<sub-flow name="sr-find-duplicate-artist" doc:id="461e1a3c-81f0-4518-855b-87e9b56a8bff" >
		<logger level="INFO" doc:name="INFO START" doc:id="31d79dd5-0088-47cd-878b-19ee05d404a1" message="#['sr-find-duplicate-artist::START::payload: ' ++ write(payload,'application/json')]"/>
		<set-variable value="#[%dw 2.0&#10;output application/java&#10;var artist = payload.artist&#10;---&#10;{&#10;    groupName: 	artist.groupName,&#10;    firstName: 	artist.firstName,&#10;    lastName:     artist.lastName,&#10;    dateOfBirth:  artist.dateOfBirth&#10;  }]" doc:name="queryParamList" doc:id="f93d0de1-f263-440a-ab52-b2d7c911d4b1" variableName="queryParamList"/>
		<logger level="DEBUG" doc:name="Logger" doc:id="c1c9c4fa-8f07-4cca-9886-c8ceb62c7e26" message="#['sr-find-duplicate-artist::queryParamList' ++ write(vars.queryParamList,'application/json')]"/>
		<flow-ref doc:name="sr-select-artists" doc:id="a3a7474c-8fef-44fe-9269-095d60fcdf7c" name="sr-select-artists"/>
		<logger level="INFO" doc:name="INFO sizeOf" doc:id="2a29a03e-5616-4135-92dd-3dd521133d39" message="#['sr-find-duplicate-artist' ++ sizeOf(payload.artists)]"/>
	</sub-flow>
	<sub-flow name="sr-build-query-param-list" doc:id="507601f4-c6fb-4204-9f7d-a443d6ea6745" >
		<logger level="INFO" doc:name="INFO START" doc:id="abfcb5af-7d25-4c00-98ac-292358b74c7f" message="#['sr-build-query-param-list::START::payload: ' ++ write(payload,'application/json')]"/>
		<ee:transform doc:name="queryParams" doc:id="4dfecbae-63f2-43ef-bc57-7d00a77f40f3" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
	firstName: attributes.queryParams.firstName,
	lastName: attributes.queryParams.lastName,
	dateOfBirth: attributes.queryParams.dateOfBirth,
	groupName: attributes.queryParams.groupName
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="INFO END payload" doc:id="6b59aca6-c052-4736-b4dc-57827625165a" message="#['sr-build-query-param-list::END::payload: ' ++ write(payload,'application/json')]"/>
	</sub-flow>
	<sub-flow name="sr-select-artists" doc:id="b7482925-0580-48fd-83a8-123c4a775b43" >
		<logger level="INFO" doc:name="INFO START" doc:id="a55e931c-1fe4-45de-8012-75a537190b06" message="#['sr-select-artists::START::payload: ' ++ write(payload,'application/json')]"/>
		<set-variable value="#[%dw 2.0&#10;   output application/java&#10;---&#10;(&quot;1=1&quot; &#10;    ++ (if(vars.queryParamList.lastName != null) &quot; AND lower(LAST_NM) LIKE concat(lower(:lastName),'%')&quot; else &quot;&quot;)&#10;    ++ (if(vars.queryParamList.firstName != null) &quot; AND lower(FIRST_NM) LIKE concat(lower(:firstName),'%')&quot; else &quot;&quot;)&#10;    ++ (if(vars.queryParamList.groupName != null) &quot; AND lower(GROUP_NM) LIKE concat(lower(:groupName),'%')&quot; else &quot;&quot;)&#10;    ++ (if(vars.queryParamList.dateOfBirth != null) &quot; AND BIRTH_DATE = :dateOfBirth&quot; else &quot;&quot;)&#10;) as String]" doc:name="whereClause" doc:id="9d568ee7-6791-48bc-81aa-07da014677f3" variableName="whereClause"/>
		<db:select doc:name="SELECT artist" doc:id="d7d78773-5881-4f0b-944e-5097b775e512" config-ref="mysql-config">
			<db:sql><![CDATA[#["SELECT ARTIST_ID, GROUP_NM, FIRST_NM, LAST_NM, BIRTH_DATE, MI, DEATH_DATE 	
    FROM BC_ARTIST 
	  WHERE $(vars.whereClause)"]]]></db:sql>
			<db:input-parameters><![CDATA[#[vars.queryParamList]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="2aa1123d-ad6a-414e-9736-655b0abd8455">
			<ee:message>
				<ee:set-payload><![CDATA[output application/json
---
{
		statusCode: p('http.get.status.ok'),
		message: p('http.get.message.ok'),
		searchCriteria: 
		("[" 
		++ (if(vars.queryParamList.lastName != null) "lastName: '$(vars.queryParamList.lastName)', " else "")
++ (if(vars.queryParamList.firstName != null) "firstName: '$(vars.queryParamList.firstName)', " else "")
++ (if(vars.queryParamList.groupName != null) "groupName: '$(vars.queryParamList.groupName)', " else "")
++ (if(vars.queryParamList.dateOfBirth != null) "birthDate: '$(vars.queryParamList.dateOfBirth)', " else "")
    	++ "]"	),
artists: payload map ( artist ) -> {
		artistId: artist.ARTIST_ID default 0,
		groupName: artist.GROUP_NM default "",
		lastName: artist.LAST_NM default "",
		firstName: artist.FIRST_NM default "",
		mi: artist.MI default "",
		dateOfBirth: artist.BIRTH_DATE as String {format: "yyyy-MM-dd"} default "",
		(if (artist.DEATH_DATE != null) (dateOfDeath: artist.DEATH_DATE as String {format: "yyyy-MM-dd"}) else dateOfDeath: "")
	}
}   ]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="impl-add-artists" doc:id="75bf0161-219f-4e48-a6d9-1f89a43d1ce3">
		<logger level="INFO" doc:name="INFO size of" doc:id="fa421435-210e-461f-85dd-4263b5d8253d" message="#['impl-add-artists::START::sizeOf payload: ' ++ sizeOf(payload.artists)]" />
		<ee:transform doc:name="artists, artistsOut, artistsFound" doc:id="41ad2674-f8a1-4e1d-a929-b822593d3bd9">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="artistsOut"><![CDATA[%dw 2.0
output application/json
---
[]]]></ee:set-variable>
				<ee:set-variable variableName="artistsFound"><![CDATA[%dw 2.0
output application/json
---
[]]]></ee:set-variable>
				<ee:set-variable variableName="artists"><![CDATA[%dw 2.0
output application/json
---
payload.artists]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<foreach doc:name="For Each Artist" doc:id="30ae9b98-3379-4bc5-90e2-a5718c43f070" collection="#[vars.artists]">
			<logger level="INFO" doc:name="payload" doc:id="9e39a4e0-47f1-43f5-8e05-9a18363af5b7" message="#['impl-add-artists::ForEach::payload: ' ++ write(payload,'application/json')]" />
			<set-payload value="#[output application/json&#10;---&#10;{&#10;	artist: {&#10;		artistId: payload.artistId,&#10;		groupName: payload.groupName,&#10;		lastName: payload.lastName,&#10;		firstName: payload.firstName,&#10;		mi: payload.mi,&#10;		dateOfBirth: payload.dateOfBirth,&#10;		dateOfDeath: payload.dateOfDeath&#10;	}&#10;}]" doc:name="artist" doc:id="c0657a0b-4d92-4c14-8bd9-d13062712f19" />
			<logger level="DEBUG" doc:name="artist" doc:id="4e559a14-1cef-46c9-812f-8edbbd3a7206" message="#['impl-add-artists::ForEach::artist: ' ++ write(payload, 'application/json')]" />
			<flow-ref doc:name="sr-find-duplicate-artist" doc:id="62ebd9fb-3791-4296-8f9b-3710f9d0ae3d" name="sr-find-duplicate-artist" target="getArtistResponse"/>
			<choice doc:name="Artist Found?" doc:id="0fbfae50-b6d6-461a-9321-0fa85c9f38bf" >
				<when expression="#[vars.getArtistResponse.artists[0]==null]">
					<flow-ref doc:name="sr-insert-artist" doc:id="53db4f7c-7058-4590-b58e-71c0342f45a3" name="sr-insert-artist" target="newArtist" />
					<set-variable value="#[%dw 2.0&#10;output application/java&#10;---&#10;vars.artistsOut + vars.newArtist]" doc:name="artistsOut" doc:id="af47b266-57b0-4bfe-a46e-a0d7bb375194" variableName="artistsOut" />
					<logger level="INFO" doc:name="artistOut" doc:id="65565f1e-2e79-4850-a5a5-594db0b19edc" message="#['impl-add-artists::ForEach::Choice::artistsOut: ' ++ write(payload,'application/json')]"/>
				</when>
				<otherwise >
					<set-variable value="#[%dw 2.0&#10;output application/json&#10;---&#10;	vars.artistsFound + vars.getArtistResponse.artists[0]]" doc:name="append artistsFound" doc:id="794ebff5-27ed-42d7-ae5a-780fe4d0329b" variableName="artistsFound"/>
				</otherwise>
			</choice>
		</foreach>
		<ee:transform doc:name="add response" doc:id="7a11bc1e-9fa9-44d9-8c84-6b8f09ad73e8">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
"statusCode": if (sizeOf(vars.artistsFound) > 0) p('http.add.status.partial') else p('http.add.status.ok'),
"message":  if (sizeOf(vars.artistsFound) > 0) p('http.add.message.partial') else p('http.add.message.ok'),
    	results: {
		addedCounts: if (vars.artistsOut[0]==null) "0" else sizeOf(vars.artistsOut), 
		addedArtists: if (vars.artistsOut[0]==null) "[]" else vars.artistsOut, 
	duplicatedCounts: if (vars.artistsFound[0]==null) "0" else sizeOf(vars.artistsFound), 
		duplicatedArtists: if (vars.artistsFound[0]==null) "[]" else vars.artistsFound, 
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="sr-insert-artist" doc:id="01d1df69-7380-4a70-8324-9f8806517bfb" >
		<logger level="INFO" doc:name="INFO START payload" doc:id="5eede89d-83bb-4196-adac-d0a60023dd5a" message="#['sr-insert-artist::START::artist: ' ++ write(payload,'application/json')]"/>
		<set-variable value="#[payload.artist]" doc:name="incomingArtist" doc:id="ae6b4845-9e9d-4806-bee9-08db1e4da1af" variableName="incomingArtist"/>
		<db:insert doc:name="Insert Artist" doc:id="2f3535a9-0425-4314-8402-16f2c1ce5655" config-ref="mysql-config">
			<db:sql ><![CDATA[INSERT INTO BC_MUSIC_FACTORY.BC_ARTIST 
         (ARTIST_ID, GROUP_NM, FIRST_NM, LAST_NM, MI, BIRTH_DATE, DEATH_DATE, STATUS_CD) 
         VALUES (NULL, :groupName, :firstName, :lastName, :mi, :birthDate, :deathDate, 'AS')]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
    groupName: 	vars.incomingArtist.groupName,
    firstName: 	vars.incomingArtist.firstName,
    lastName: 	vars.incomingArtist.lastName,
    mi: 	  	vars.incomingArtist.mi,
    birthDate: 	vars.incomingArtist.dateOfBirth,
    deathDate: 	vars.incomingArtist.dateOfDeath
}]]]></db:input-parameters>
		</db:insert>
		<db:select doc:name="Select Insert" doc:id="c61c86b7-ee0f-45b5-a275-0a9461eca347" config-ref="mysql-config" target="newArtistId">
			<db:sql ><![CDATA[SELECT MAX(artist_id) AS artist_id from BC_MUSIC_FACTORY.BC_ARTIST
    WHERE GROUP_NM = :groupName 
          AND BIRTH_DATE = :birthDate 
          AND FIRST_NM = :firstName
          AND LAST_NM = :lastName
]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
    groupName: 	vars.incomingArtist.groupName,
    firstName: 	vars.incomingArtist.firstName,
    lastName: 	vars.incomingArtist.lastName,
    birthDate: 	vars.incomingArtist.dateOfBirth
}]]]></db:input-parameters>
		</db:select>
		<set-payload value="#[output application/java&#10;var artist = vars.incomingArtist&#10;var newArtistId = vars.newArtistId[0].artist_id default 0&#10;---&#10;{&#10;	artistId: 	newArtistId,&#10;	groupName: 	artist.groupName,&#10;	lastName: 	artist.lastName,&#10;	firstName: 	artist.firstName,&#10;	mi:       	artist.mi,&#10;	dateOfBirth: 	artist.dateOfBirth,&#10;	dateOfDeath:	artist.dateOfDeath&#10;}]" doc:name="Update Payload" doc:id="99fa3c72-0f54-4255-8c4b-de2e63a51ee3" />
		<logger level="INFO" doc:name="INFO END" doc:id="643411d4-217f-4c98-9b81-024ffcb3fbb6" message="#['sr-insert-artist::END:payload: ' ++ write(payload,'application/json')]"/>
	</sub-flow>
	<sub-flow name="impl-update-artist-urls" doc:id="5e2a0dda-1eaf-44bc-81e8-ed41783658c2" >
		<logger level="INFO" doc:name="INFO START" doc:id="68204620-267b-4c24-9227-c0c6bc4394ce" message="#['impl-update-artist-urls::START::payload:'  ++ write(payload, 'application/json')]"/>
	</sub-flow>
</mule>